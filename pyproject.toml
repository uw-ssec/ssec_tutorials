[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "ssec-tutorials"
dynamic = ["version"]
description = "UW SSEC Tutorials Utility Library"
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "torch~=2.7",
    "langchain~=0.3.26",
    "jsonlines>=4.0.0"
]

[project.optional-dependencies]
dev = [
    "pre-commit",
    "nox",
    "pytest>=6",
    "pytest-cov",
    "pytest-xdist",
    "pytest-mock",
]
docs = [
    "sphinx_rtd_theme",
    "sphinx-automodapi",
    "sphinx-panels",
    "sphinxcontrib-mermaid",
    "jupyter-book",
    "numpydoc",
]
all = ["ssec-tutorials[dev,docs]"]

[project.license]
file = "LICENSE"

[project.urls]
Homepage = "https://github.com/uw-ssec/ssec_tutorials"
Repository = "https://github.com/uw-ssec/ssec_tutorials.git"
Issues = "https://github.com/uw-ssec/ssec_tutorials/issues"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/ssec_tutorials/version.py"

[tool.hatch.version.raw-options]
local_scheme = "no-local-version"

[tool.hatch.build.targets.sdist]
exclude = ["/tests"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-vvv", "-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = false
filterwarnings = ["error"]
log_cli_level = "info"
testpaths = ["tests"]

[tool.mypy]
files = ["src", "tests"]
python_version = "3.11"
warn_unused_configs = true
strict = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
module = "ssec_tutorials.*"
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.ruff]
src = ["src"]
exclude = ["tests/**", "testing.py"]
line-length = 100

[tool.ruff.lint]
extend-select = [
    "B",   # flake8-bugbear
    "I",   # isort
    "ARG", # flake8-unused-arguments
    "C4",  # flake8-comprehensions
    "EM",  # flake8-errmsg
    "ICN", # flake8-import-conventions
    "G",   # flake8-logging-format
    "PGH", # pygrep-hooks
    "PIE", # flake8-pie
    "PL",  # pylint
    "PT",  # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "RET", # flake8-return
    "RUF", # Ruff-specific
    "SIM", # flake8-simplify
    "T20", # flake8-print
    "UP",  # pyupgrade
    "YTT", # flake8-2020
    "EXE", # flake8-executable
    "NPY", # NumPy specific rules
    "PD",  # pandas-vet
]
ignore = [
    "PLR09",   # Too many <...>
    "PLR2004", # Magic value used in comparison
    "ISC001",  # Conflicts with formatter
    "T201",    # Print found
]
isort.required-imports = ["from __future__ import annotations"]
# Uncomment if using a _compat.typing backport
# typing-modules = ["{{ cookiecutter.__project_slug }}._compat.typing"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]
"noxfile.py" = ["T20"]

[tool.repo-review]
ignore = [
  "PC140", # Ignore use of mypy
]
